name: Create Production Pull Request

on:
  workflow_dispatch:
    inputs:
      pr_title:
        description: "Base title of the Pull Request"
        required: false
        default: "Release from main to production"
      pr_body:
        description: "Body description of the Pull Request"
        required: false
        default: "Automated pull request to merge changes from main into production for release."

jobs:
  create-pull-request:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Current Date
        id: get_date
        run: |
          DATE=$(date +'%Y-%m-%d')
          echo "current_date=${DATE}" >> $GITHUB_OUTPUT

      - name: Set PR Title with Date
        id: set_title
        run: |
          BASE_TITLE="${{ github.event.inputs.pr_title }}"
          CURRENT_DATE="${{ steps.get_date.outputs.current_date }}"
          FULL_TITLE="${BASE_TITLE} - ${CURRENT_DATE}"
          echo "::set-output name=full_title::${FULL_TITLE}"

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          base: production
          head: main
          title: "${{ steps.set_title.outputs.full_title }}"
          body: "${{ github.event.inputs.pr_body }}"
          labels: release
          commit-message: "Automated release from main to production - ${{ steps.get_date.outputs.current_date }}"
          # Optionally, you can specify more options like reviewers, assignees, etc.

      - name: Check for Existing PR
        id: check_pr
        run: |
          EXISTING_PR=$(gh pr list --base production --head main --state open --json number --jq '.[].number')
          echo "existing_pr=$EXISTING_PR" >> $GITHUB_OUTPUT

      - name: Notify Existing PR
        if: steps.check_pr.outputs.existing_pr != ''
        run: |
          echo "A pull request (#${{ steps.check_pr.outputs.existing_pr }}) from main to production already exists."
